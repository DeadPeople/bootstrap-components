$.extend({_bc: new Object()});$._bc.vals = new Object();$._bc.vars = function(options, callback){var vars = new Object();if(typeof(options) == 'object') {vars.options = options;} else if(typeof(options) == 'function') {vars.callback = options;} else if(typeof(options) == 'string') {vars.key = options;}if(typeof(callback) == 'function') {vars.callback = callback;}return vars;}$._bc.get = function(options, key, defaultValue) {if(options != null) {if(options[key] != null) {return options[key];} else {return defaultValue;}} else {return defaultValue;}}var userAgent = navigator.userAgent.toLowerCase();$._bc.browser = {version: (userAgent.match( /.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/ ) || [])[1],safari: /webkit/.test( userAgent ),opera: /opera/.test( userAgent ),msie: /msie/.test( userAgent ) && !/opera/.test( userAgent ),mozilla: /mozilla/.test( userAgent ) && !/(compatible|webkit)/.test( userAgent )};$._bc.vals.darklight = new Object();$._bc.vals.darklight.opened = false;$._bc.vals.darklight.darkdrop = $("<div class='modal-backdrop fade darklight-backdrop'></div>");$.fn.extend({darklight:function(options, callback){var EVENT_ATTACH = ".bootstrapcomponent.darklight";var vars = $._bc.vars(options, callback);var _options = vars.options;var _callback = vars.callback;var _backdrop = $._bc.get(_options, "backdrop", "static");var _event = $._bc.get(_options, "event", "click");var _start = $._bc.get(_options, "start", null);var _focus = $._bc.get(_options, "focus", true);var _init = $._bc.get(_options, "init", null);var _finish = $._bc.get(_options, "finish", null);if(_callback == null) _callback = function() {return true;}var my = $(this);var $next = null;var $dark = $._bc.vals.darklight.darkdrop;my.nextDarklight = function(obj, options, callback){var $_next = $(obj);if(options == null) options = new Object();options.start = false;$next = $_next.darklight(options, callback);return $next;}my.showDarklight = function() {if(_focus) my.focus();if(typeof(_init) == 'function') _init.call(my);if(!$._bc.vals.darklight.opened) {$("body").append($dark);setTimeout(function(){$dark.addClass("in");},1);$._bc.vals.darklight.opened = true;}my.addClass("darklight-top");if(my.css("position") == "static")my.addClass("darklight-fix-top");my.bind(_event + EVENT_ATTACH, function(){var _ret = _callback.call($(this));if(_ret) {$(this).unbind(_event + EVENT_ATTACH);my.removeClass("darklight-top");my.removeClass("darklight-fix-top");if(typeof(_finish) == 'function') _finish.call(my);if($next == null) {$dark.removeClass("in");setTimeout(function(){$dark.hide();},300);} else {$next.showDarklight();}}});}if(_start == null) {my.showDarklight();}return my;}});$.fn.extend({});$._bc.vals.datepicker = new Object();$._bc.vals.datepicker.index = 1;$.fn.extend({datepicker:function(options){var my = $(this);var vars = $._bc.vars(options);var _options = vars.options;var _index = $._bc.vals.datepicker.index;$._bc.vals.datepicker.index++;var date = $._bc.get(_options, "date", new Date());var enable_datepicker = false;var enable_timepicker = false;if($._bc.get(_options, "target", "all") == "all" || $._bc.get(_options, "target", "all") == "dater") {enable_datepicker = true;}if($._bc.get(_options, "target", "all") == "all" || $._bc.get(_options, "target", "all") == "timer") {enable_timepicker = true;}function dd(str) {str = str + "";if(str.length == 1)return "0" + str;return str;}function formatDate(date, outer) {var str_date = "";var show_date = outer == null || (enable_datepicker && outer == true);var show_time = outer == null || (enable_timepicker && outer == true);if(show_date)str_date = date.getFullYear() + "-" + dd(date.getMonth()+1) + "-" + dd(date.getDate()) + (show_time ? " " : "");if(show_time)str_date += dd(date.getHours()) + ":" + dd(date.getMinutes()) + ":" + dd(date.getSeconds());return str_date;}function getDate(str) {var _date;try {if(str.match(/^\d+:\d+:\d+/)) str = "1990-09-03 " + str;_date = new Date(Date.parse(str.replace(/-/g, "/")));if(_date == "Invalid Date" || _date == null)return date;elsereturn _date;} catch(err) {return date;}}var $input = $(this).find(".datepicker");$input.val(formatDate(date, true));var $btn = $(this).find("[data-toggle='datepicker']");$btn.click(function(event){var _pre_date = $input.val();var _date = getDate($input.val());if(my.data("datepicker") == null) {var $datepicker = $("<div class='datepicker modal'>");$datepicker.appendTo("body");var pos = $(this).position();$datepicker.css("left", pos.left + "px");$datepicker.css("top", (pos.top + $(this).outerHeight()) + "px");my.data("datepicker", true);var $date = $("<div class='datepicker-date'>");var $date_head  = $("<div class='datepicker-head'>");var $date_left = $("<button class='btn btn-primary btn-small datepicker-month-left'><i class='icon-chevron-left  icon-white'></i></button>");var $date_content = $("<h5></h5>");var $date_right = $("<button class='btn btn-primary btn-small datepicker-month-right'><i class='icon-chevron-right  icon-white'></i></button>");var $date_body = $("<div class='datepicker-body'>");var $date_days = $("<div class='datepicker-days'>");$date_days.append("<span>Sun</span>");$date_days.append("<span>Mon</span>");$date_days.append("<span>Tue</span>");$date_days.append("<span>Wed</span>");$date_days.append("<span>Thur</span>");$date_days.append("<span>Fri</span>");$date_days.append("<span>Sat</span>");var $date_dates = $("<div>");$date.appendTo($datepicker);$date_head.appendTo($date);$date_left.appendTo($date_head);$date_content.appendTo($date_head);$date_right.appendTo($date_head);$date_body.appendTo($date);$date_days.appendTo($date_body);$date_dates.appendTo($date_body);if(!enable_datepicker) $date.hide();$date_left.data("m", -1);$date_right.data("m", 1);$date_left.add($date_right).click(function(){var value = $(this).data("m");var _mdate = new Date(getDate(genDate()));_mdate.setMonth(_mdate.getMonth() + value);if(value == -1 && _date.getMonth() == _mdate.getMonth()) {_mdate.setDate(0);} else if(value == 1 && (_date.getMonth() + 2) % 12 == _mdate.getMonth()) {_mdate.setDate(0);}_date = _mdate;setDateView();});function setDateView() {function getStartDay(date) {var _date = new Date(getDate(formatDate(date)));_date.setDate(1);return _date.getDay();}function getTotalDays(date) {var _date = new Date(getDate(formatDate(date)));_date.setDate(1);_date.setMonth(_date.getMonth() + 1);_date.setDate(0);return _date.getDate();}$date_content.html(_date.getFullYear() + "-" + dd(_date.getMonth()+1));$date_dates.empty();var _gsd = getStartDay(_date);for(var i = 0 ; i < _gsd ; i++) {$btn = $("<button class='btn'></button>");$btn.css("visibility", "hidden");$btn.appendTo($date_dates);}var _gtd = getTotalDays(_date);for(var i = 1 ; i <= _gtd ; i++) {$btn = $("<button class='btn'>"+i+"</button>");$btn.appendTo($date_dates);if(i == _date.getDate()) {$btn.addClass("btn-warning");}$btn.click(function(){$date_dates.find("button").removeClass("btn-warning");$(this).addClass("btn-warning");_date = new Date(genDate());});}}setDateView();if(enable_datepicker && enable_timepicker) {var $split = $("<div class='datepicker-split'></div>");$split.appendTo($datepicker);}var $time = $("<div class='datepicker-time'>");function genTimeUnit(type, max) {var $unit = $("<div class='datepicker-"+type+"'>");var $input = $("<input type='text' maxlength='2' />");var $unit_minus = $("<button class='btn'><i class='icon-minus'></i></button>");var $unit_plus = $("<button class='btn'><i class='icon-plus'></i></button>");$input.data("max", max);$unit_minus.data("m", -1);$unit_plus.data("m", 1);function fresh() {var num = parseInt($input.val(), 10);if(isNaN(num)) num = 0;if(num < 0) num = 0;if(num >= max) num = max - 1;$input.val(dd(num));}$unit_minus.add($unit_plus).click(function(){var value = $(this).data("m");var max = $input.data("max");var num = parseInt($input.val(), 10);num += value;$input.val(dd(num));fresh();});$input.blur(function(){fresh();});$input.appendTo($unit);$unit_minus.appendTo($unit);$unit_plus.appendTo($unit);return $unit;}var $hour = $(genTimeUnit("hour", 24));var $minute = $(genTimeUnit("minute", 60));var $second = $(genTimeUnit("second", 60));var $span1 = $("<span>:</span>");var $span2 = $("<span>:</span>");$hour.find("input").val(dd(_date.getHours()));$minute.find("input").val(dd(_date.getMinutes()));$second.find("input").val(dd(_date.getSeconds()));$time.appendTo($datepicker);$hour.appendTo($time);$span1.appendTo($time);$minute.appendTo($time);$span2.appendTo($time);$second.appendTo($time);if(!enable_timepicker) $time.hide();function genDate() {var str = $date_content.html()+"-"+dd($date_body.find(".btn-warning").html());str += " " + dd($hour.find("input").val()) + ":" + dd($minute.find("input").val()) + ":" + dd($second.find("input").val());return str;}$datepicker.click(function(event){event.stopPropagation();});$(document).bind('click.datepicker' + _index, function(event){var _stop = my.data("stop");my.data("stop", null);if(_stop)return;$datepicker.remove();my.data("datepicker", null);$input.val(formatDate(getDate(genDate()), true));$(document).unbind('click.datepicker' + _index);if(_pre_date != $input.val())$input.change();});}});my.click(function(event){hideView();});function hideView() {if(my.data("datepicker") == true) {my.data("stop", true);} else {}}}});$._bc.vals.dialog = new Object();$._bc.vals.dialog.z_index = 1051;$.extend({dialog:function(options, callback){if(options == null) options = new Object();var $modal = $('<div class="modal hide fade"></div>');var $header = $('<div class="modal-header"></div>');var $content = $('<div class="modal-body"></div>');var $footer = $('<div class="modal-footer"></div>');$modal.append($header);$modal.append($content);$modal.append($footer);$header.append('<button type="button" class="close" data-dismiss="modal" aria-hidden="true">¡Á</button>');$header.append('<h3 id="myModalLabel">'+options.title+'</h3>');$content.append(options.content);$footer.append('<button class="btn" data-dismiss="modal" aria-hidden="true">Close</button>');$modal.appendTo("body");if(callback != null) {var mcall = callback;$modal.each(function(){mcall.call($(this));});}$modal.modal(options.options);var $back = $("body div.modal-backdrop:last");$back.css("z-index", $._bc.vals.dialog.z_index);$modal.css("z-index", $._bc.vals.dialog.z_index+1);$._bc.vals.dialog.z_index += 2;$modal.on('hidden', function () {$(this).remove();$._bc.vals.dialog.z_index -= 2;});return $modal;}});!function ($) {$(document).on("click.bootstrapcomponent.dropdown", "ul.dropdown-menu li a", function(event){var $parent = $(this).parent();for(var i = 0 ; i < 5 ; i++) {if($parent.hasClass("btn-group")) {break;}$parent = $parent.parent();}var $tgt = $parent.find("[data-type='selector']");var value = $(this).attr("value");if(value == undefined) value = $(this).html();$tgt.val(value);$tgt.find(".dropdown-value").html($(this).html());});}(window.jQuery);$.fn.extend({fileuploader:function(options){var vars = $._bc.vars(options);var _options = vars.options;var _muti_upload = false;var _max = $._bc.get(_options, "max", -1);if($._bc.get(_options, "type", "one") == "muti") {_muti_upload = true;}var my = $(this);my.hide();var _name = my.attr("name");var $div = $("<div class='fileuploader'>");var $label = $("<label class='fileuploader-region'>");var $button = $("<button class='btn file' type='button'>File</button>");var $tips = $("<span class='tips'>Select File</span>");var $region = $("<div>");var $files_region = $("<div class='fileuploader-items'>");$div.insertAfter(my);$div.append(my);$label.insertAfter(my);$button.appendTo($label);$tips.appendTo($label);function getFilename(filepath) {var filename = filepath.replace(/^.*[\\\/]/, '');return filename;}function markUploader(input, callback) {var _callback = callback;input.change(function(){if(_callback != null) _callback.call($(this));});}function refreshEnable() {if(_muti_upload) {var _fileNum = $files_region.find(".fileuploader-item input[type='file']").length;if(_max != -1 && _fileNum >= _max) {$button.attr("disabled", "disabled");if($._bc.browser.msie) my.attr("disabled", "disabled");} else {$button.removeAttr("disabled");if($._bc.browser.msie) my.removeAttr("disabled");}if(_fileNum == 0)$tips.html("Select File");else$tips.html(_fileNum + " files selected");}}function ieSuck() {if($._bc.browser.msie) {my.show();$label.prepend(my);$div.addClass("ie");my.css("width", $button.css("width"));my.css("height", $button.css("height"));my.addClass("fileuploader-ori");$button.insertBefore($label);var $tmp_lbl = $("<label>");$tmp_lbl.insertAfter($button);$tmp_lbl.append($button);return true;}return false;}if(!_muti_upload) {markUploader(my, function(){var filename = getFilename($(this).val());$tips.html(filename);if(filename == "") $tips.html("Select File");});ieSuck();if(my.val() != "") {var filename = getFilename(my.val());$tips.html(filename);}} else {$region.insertAfter($label);$files_region.appendTo($region);var tmp_my = my.clone();my.remove();my = tmp_my;my.removeAttr("multiple");refreshEnable();if(ieSuck()) {my.removeAttr("name");markUploader(my, function(){if(addFileMark($(this))) {my = $(this).clone(true);$(this).hide();$(this).attr("name", _name);$label.prepend(my);refreshEnable();}});}}function addFileMark($input) {var filename = getFilename($input.val());var $div_file = $("<div class='fileuploader-item'>");var $rm = $("<button class='close' type='button'>&times;</button>");var $filename = $("<span class='tips'>");var has = false;$(".fileuploader-item input[type='file']").each(function(){var _filename = getFilename($(this).val());if(filename == _filename) has = true;});if(has) {alert("Can't upload same file.");return false;}$filename.html(filename);$input.attr("multiple", "multiple");$rm.click(function(){$div_file.remove();refreshEnable();});$div_file.appendTo($files_region);$input.appendTo($div_file);$rm.appendTo($div_file);$filename.appendTo($div_file);return true;}$button.click(function(){if(_muti_upload) {var $file = my.clone();markUploader($file, function(){addFileMark($(this));refreshEnable();});$file.click();} else {my.click();}});return $label;}});$.fn.extend({floater:function(options, callback){var vars = $._bc.vars(options);var _options = vars.options;var _callback = vars.callback;var my = $(this);var $after = $._bc.get(_options, "after", null);var $tgt = $(document);if(my.length == 0) return;if($after != null) $after = $($after);var my_fake = $("<span>");my_fake.css("display", my.css("display"));my_fake.css("zoom", "1");my_fake.css("margin", my.css("margin"));my_fake.outerHeight(my.outerHeight());my_fake.outerWidth(my.outerWidth());my_fake.insertAfter(my);my_fake.hide();$tgt.scroll(function(){var pos = my.offset();if(my.css("position") == "static") {my.data("bootstrapcomponent_floater_pos", pos);} else {pos = my.data("bootstrapcomponent_floater_pos");}if($after == null) {if($(this).scrollTop() > pos.top) {my_fake.show();my.addClass("floater");my.css("top", "0");} else {my_fake.hide();my.removeClass("floater");}} else {var _top = $after.offset().top + $after.outerHeight();if(_top > pos.top) {my_fake.show();my.addClass("floater");my.css("top", (_top - $(this).scrollTop()) + "px");} else {my_fake.hide();my.removeClass("floater");}}});}});$.fn.extend({slider:function(options){var vars = $._bc.vars(options);var _options = vars.options;var value = _options.value;var $process = $(this);var $spiner = $process.find(".slider[data-toggle='slider']");var _total_width = $process.outerWidth() - $spiner.outerWidth();var _min = parseInt($spiner.attr("data-min"), 10);var _max = parseInt($spiner.attr("data-max"), 10);if(!isNaN(_min) && !isNaN(_max) && _min < _max) {$spiner.val(value);$spiner.css("margin-left", (value / (_max - _min) * _total_width) + "px");} else {$spiner.val((value * 100) + "%");$spiner.css("margin-left", (_total_width * value) + "px");}}});!function ($) {var mouse_down = false;var process;var tgt;var _innerLeft;$(document).on("mousedown.bootstrapcomponent.slider", "button[data-toggle='slider']", function(event){process = $(this).parent();tgt = $(this);_innerLeft = event.pageX - tgt.offset().left;mouse_down = true;});$(document).on("mousemove.bootstrapcomponent.slider", function(event){if(!mouse_down) return;var _tgt_width = tgt.outerWidth();var _process_width = process.outerWidth();var _total_width = _process_width - _tgt_width;var _curLeft = event.pageX - process.offset().left - _innerLeft;if(_curLeft < 0) _curLeft = 0;if(_curLeft > _total_width) _curLeft = _total_width;tgt.css("margin-left", _curLeft + "px");var _min = parseInt(tgt.attr("data-min"), 10);var _max = parseInt(tgt.attr("data-max"), 10);if(!isNaN(_min) && !isNaN(_max) && _min < _max) {tgt.val(_curLeft / _total_width * (_max - _min));} else {tgt.val((_curLeft / _total_width * 100) + "%");}tgt.change();});$(document).on("mouseup.bootstrapcomponent.slider", function(event){mouse_down = false;});}(window.jQuery);$.fn.extend({switch:function(options){var vars = $._bc.vars(options);var _options = vars.options;var my = $(this);my.hide();var $bac = $("<div class='progress switch'>");var $lbl = $("<button class='label'></button>");var $btn = $("<button type='button' class='btn spiner'>");$bac.insertAfter(my);$lbl.appendTo($bac);$btn.appendTo($bac);function refreshStatus() {var _on = my.prop("checked");if(_on) {$bac.removeClass("off");$bac.addClass("on");$lbl.html("ON");var _left = $bac.width() - $btn.outerWidth();$btn.css("left", _left + "px");} else {$bac.removeClass("on");$bac.addClass("off");$lbl.html("OFF");$btn.css("left", 0);}}refreshStatus();$bac.click(function(){var _on = !my.prop("checked");my.prop("checked", _on);refreshStatus();my.change();});}});